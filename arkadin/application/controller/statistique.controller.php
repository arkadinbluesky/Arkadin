<?phpclass statistique extends controller{		public $module_group = "Other";		function index()	{		$this->title = __("Statistics");		$this->ariane = "> ".$this->title;	}	function admin_general()	{		$this->title = __("Statistics");		$this->ariane = "> ".$this->title;				//debug($dd);        $module = array();		$module['picture'] = "administration/stats.gif";		$module['name'] = __("Statistics");		$module['description'] = __("Overall, temporel, etc..");                if (from() === "administration.controller.php")		{            return $module;        }		                $total = $this->connexion_total();        				$this->javascript = array("ext-3.0.0/adapter/ext/ext-base.js","ext-3.0.0/ext-all.js","ext-3.0.0/examples/direct/php/api.php","jquery-1.4.2.min.js","jquery.history.js","histo.js");		$this->code_javascript[] = "$(document).ready(function(){  var s1 = [2, 6, 7, 10];  var s2 = [7, 5, 3, 4];  var s3 = [14, 9, 3, 8];  plot3 = $.jqplot('chart3', [s1, s2, s3], {    // Tell the plot to stack the bars.    stackSeries: true,    captureRightClick: true,    seriesDefaults:{      renderer:$.jqplot.BarRenderer,      rendererOptions: {          // Put a 30 pixel margin between bars.          barMargin: 30,          // Highlight bars when mouse button pressed.          // Disables default highlighting on mouse over.          highlightMouseDown: true         },      pointLabels: {show: true}    },    axes: {      xaxis: {          renderer: $.jqplot.CategoryAxisRenderer      },      yaxis: {        // Don't pad out the bottom of the data range.  By default,        // axes scaled as if data extended 10% above and below the        // actual range to prevent data points right on grid boundaries.        // Don't want to do that here.        padMin: 0      }    },    legend: {      show: true,      location: 'e',      placement: 'outside'    }       });  // Bind a listener to the jqplotDataClick event.  Here, simply change  // the text of the info3 element to show what series and ponit were  // clicked along with the data for that point.  $('#chart3').bind('jqplotDataClick',    function (ev, seriesIndex, pointIndex, data) {      $('#info3').html('series: '+seriesIndex+', point: '+pointIndex+', data: '+data);    }  );});";																        $this->set("data", $total);												}		function connexion_last()	{		// hour by hour last 24h00		$sql = "SELECT HOUR(date_created) as hour, count(1) as cpt		FROM statistique_main 		where date_created >= ADDDATE(now(), INTERVAL -1 DAY)		GROUP BY HOUR(date_created)";				$res = $GLOBALS['_SQL']->sql_query($sql);				$start = date("H");		for($i = $start+1; $i <= $start+24; $i++)		{			$mod = $i%24;			$data['daily'][$mod] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{			$data['daily'][$ob->hour] = $ob->cpt;		}						// day by day last week		$sql = "SELECT DATE_FORMAT(date_created,'%a') as day, count(1) as cpt		FROM statistique_main 		where date_created >= ADDDATE(now(), INTERVAL -1 WEEK)		GROUP BY DATE_FORMAT(date_created,'%a')";				$res = $GLOBALS['_SQL']->sql_query($sql);		$week_day = array("Sun","Mon","Tue","Wed","Thu","Fri","Sat");				$start = date("N");		for($i = $start+1; $i <= $start+7; $i++)		{			$data['weekly'][$week_day[$i%7]] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{						$data['weekly'][$ob->day] = $ob->cpt;		}						// day by day last month		$sql = "SELECT DAY(date_created) as day, count(1) as cpt		FROM statistique_main 		where date_created >= ADDDATE(now(), INTERVAL -1 MONTH)		GROUP BY DAY(date_created)";				$res = $GLOBALS['_SQL']->sql_query($sql);				$start = mktime (0, 0, 0, date("n")-1, date("j")+1, date("Y") );		$end = mktime (0, 0, 0, date("n"), date("j"), date("Y") );				$total_time = $end - $start;		$days_in_month = ceil($total_time/3600/24);		$day_start = date("j", $start);				for($i = $day_start; $i <= $day_start+$days_in_month; $i++)		{			$day = $i%$days_in_month;			if ($day == 0)			{				$day = $days_in_month;			}			$data['monthly'][$day] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{			$data['monthly'][$ob->day] = $ob->cpt;		}						// month by month last year		$sql = "SELECT DATE_FORMAT(date_created,'%b') as month, count(1) as cpt		FROM statistique_main 		where date_created >= ADDDATE(now(), INTERVAL -1 YEAR)		GROUP BY DATE_FORMAT(date_created,'%b')";		$res = $GLOBALS['_SQL']->sql_query($sql);				$month = array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");		$start = date("n");		debug($start);				for($i = $start; $i < $start+12; $i++)		{			$data['yearly'][$month[$i%12]] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{			$data['yearly'][$ob->month] = $ob->cpt;		}				return $data;	}		function connexion_total()	{		// hour by hour		$sql = "SELECT HOUR(date_created) as hour, count(1) as cpt		FROM statistique_main 		GROUP BY HOUR(date_created)";				$res = $GLOBALS['_SQL']->sql_query($sql);				for($i = 0; $i < 24; $i++)		{			$data['daily'][$i] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{			$data['daily'][$ob->hour] = $ob->cpt;		}						// day by day last week		$sql = "SELECT DATE_FORMAT(date_created,'%a') as day, count(1) as cpt		FROM statistique_main 		GROUP BY DATE_FORMAT(date_created,'%a')";				$res = $GLOBALS['_SQL']->sql_query($sql);		$week_day = array("Sun","Mon","Tue","Wed","Thu","Fri","Sat");				for($i = 1; $i <= 7; $i++)		{			$data['weekly'][$week_day[$i%7]] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{						$data['weekly'][$ob->day] = $ob->cpt;		}				// day by day last month		$sql = "SELECT DAY(date_created) as day, count(1) as cpt		FROM statistique_main 		GROUP BY DAY(date_created)";				$res = $GLOBALS['_SQL']->sql_query($sql);				for($i = 1; $i <= 31; $i++)		{			$data['monthly'][$i] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{			$data['monthly'][$ob->day] = $ob->cpt;		}						// month by month last year		$sql = "SELECT DATE_FORMAT(date_created,'%b') as month, count(1) as cpt		FROM statistique_main 		GROUP BY DATE_FORMAT(date_created,'%b')";		$res = $GLOBALS['_SQL']->sql_query($sql);				$month = array("Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec");		$start = date("n");		//debug($start);				for($i = 0; $i < 12; $i++)		{			$data['yearly'][$month[$i]] = 0;		}				while($ob = $GLOBALS['_SQL']->sql_fetch_object($res))		{			$data['yearly'][$ob->month] = $ob->cpt;		}				return $data;		}		function connexion_by_country()	{		$sql = "SELECT DATE_FORMAT(date_created,'%b') as month, count(1) as cpt		FROM statistique_main a		INNER JOIN statistique_main_ip b ON a.ip = b.ip		GROUP BY DATE_FORMAT(date_created,'%b')";		}		function connexion_by_day()	{		$sql = "SELECT ip, min(date_created) as date, GROUP_CONCAT(DISTINCT id_user_main ORDER BY id_user_main DESC SEPARATOR ' ') as id_user_main,		GROUP_CONCAT(DISTINCT user_agent ORDER BY user_agent DESC SEPARATOR ' ') as user_agent, count(1) as cpt		FROM statistique_main		WHERE date(date_created) = now()		GROUP BY ip		ORDER by min(date_created)";				$res = $GLOBALS['_SQL']->sql_query($sql);				while($tab = $GLOBALS['_SQL']->sql_fetch_array($res))		{			$data['day'][] = $tab;		}	}		function connexion_by_user()	{		$sql = "SELECT *		FROM statistique_main		WHERE ip = '127.0.0.1'		ORDER by date_created";				$res = $GLOBALS['_SQL']->sql_query($sql);				while($tab = $GLOBALS['_SQL']->sql_fetch_array($res))		{			$data['day'][] = $tab;		}				return $data;	}				/*	  referer : SELECT * FROM `statistique_main` 	WHERE `referer` not like "http://www.estrildidae.net/%" and `referer` != '' 	and `referer` not like "http://estrildidae.net/%" and ip != '78.214.180.150'	 */}?>